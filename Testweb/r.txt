Feature: Exchange loyalty points between two parties

    In order to exchange loyalty points between company A and company B
    As a smart contract
    I want to exchange loyalty points of A (alp) for loyalty points of B (blp) or
              exchange loyalty points of B (alp) for loyalty points of A (blp)
              according to corresponding preset exchanging rate and rules.

  Scenario: Company A exchanges alp for blp
  [33m? Given the exchange rate is 1alp=0.5blp[39m
  [33m? And original alp account of A is 100[39m
  [33m? And original blp account of A is 100[39m
  [33m? And original alp account of B is 100[39m
  [33m? And original blp account of B is 100[39m
  [33m? When A want to exchange 100 alp for blp[39m
  [33m? Then alp account of A should be 0[39m
  [33m? And blp account of A should be 150[39m
  [33m? And alp account of B should be 200[39m
  [33m? And blp account of B should be 50[39m

  Scenario: Company A exchanges alp for blp
  [33m? Given the exchange rate is 1alp=0.5blp[39m
  [33m? And original alp account of A is 100[39m
  [33m? And original blp account of A is 100[39m
  [33m? And original alp account of B is 100[39m
  [33m? And original blp account of B is 100[39m
  [33m? When A want to exchange 20 alp for blp[39m
  [33m? Then alp account of A should be 80[39m
  [33m? And blp account of A should be 110[39m
  [33m? And alp account of B should be 120[39m
  [33m? And blp account of B should be 90[39m

  Scenario: Company A exchanges alp for blp
  [33m? Given the exchange rate is 1alp=0.5blp[39m
  [33m? And original alp account of A is 100[39m
  [33m? And original blp account of A is 100[39m
  [33m? And original alp account of B is 100[39m
  [33m? And original blp account of B is 100[39m
  [33m? When A want to exchange 110 alp for blp[39m
  [33m? Then alp account of A should be 100[39m
  [33m? And blp account of A should be 100[39m
  [33m? And alp account of B should be 100[39m
  [33m? And blp account of B should be 100[39m

Warnings:

1) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:23[39m
   Step: [1mGiven the exchange rate is 1alp=0.5blp[22m - [90mfeatures\test.feature:10[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       Given('the exchange rate is {int}alp={float}blp', function (int, float, callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

2) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:23[39m
   Step: [1mAnd original alp account of A is 100[22m - [90mfeatures\test.feature:11[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       Given('original alp account of A is {int}', function (int, callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

3) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:23[39m
   Step: [1mAnd original blp account of A is 100[22m - [90mfeatures\test.feature:12[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       Given('original blp account of A is {int}', function (int, callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

4) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:23[39m
   Step: [1mAnd original alp account of B is 100[22m - [90mfeatures\test.feature:13[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       Given('original alp account of B is {int}', function (int, callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

5) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:23[39m
   Step: [1mAnd original blp account of B is 100[22m - [90mfeatures\test.feature:14[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       Given('original blp account of B is {int}', function (int, callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

6) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:23[39m
   Step: [1mWhen A want to exchange 100 alp for blp[22m - [90mfeatures\test.feature:15[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       When('A want to exchange {int} alp for blp', function (int, callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

7) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:23[39m
   Step: [1mThen alp account of A should be 0[22m - [90mfeatures\test.feature:16[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       Then('alp account of A should be {int}', function (int, callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

8) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:23[39m
   Step: [1mAnd blp account of A should be 150[22m - [90mfeatures\test.feature:17[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       Then('blp account of A should be {int}', function (int, callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

9) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:23[39m
   Step: [1mAnd alp account of B should be 200[22m - [90mfeatures\test.feature:18[39m
   Message:
     [33mUndefined. Implement with the following snippet:

       Then('alp account of B should be {int}', function (int, callback) {
         // Write code here that turns the phrase above into concrete actions
         callback(null, 'pending');
       });[39m

10) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:23[39m
    Step: [1mAnd blp account of B should be 50[22m - [90mfeatures\test.feature:19[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Then('blp account of B should be {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

11) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:24[39m
    Step: [1mGiven the exchange rate is 1alp=0.5blp[22m - [90mfeatures\test.feature:10[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Given('the exchange rate is {int}alp={float}blp', function (int, float, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

12) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:24[39m
    Step: [1mAnd original alp account of A is 100[22m - [90mfeatures\test.feature:11[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Given('original alp account of A is {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

13) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:24[39m
    Step: [1mAnd original blp account of A is 100[22m - [90mfeatures\test.feature:12[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Given('original blp account of A is {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

14) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:24[39m
    Step: [1mAnd original alp account of B is 100[22m - [90mfeatures\test.feature:13[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Given('original alp account of B is {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

15) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:24[39m
    Step: [1mAnd original blp account of B is 100[22m - [90mfeatures\test.feature:14[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Given('original blp account of B is {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

16) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:24[39m
    Step: [1mWhen A want to exchange 20 alp for blp[22m - [90mfeatures\test.feature:15[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        When('A want to exchange {int} alp for blp', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

17) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:24[39m
    Step: [1mThen alp account of A should be 80[22m - [90mfeatures\test.feature:16[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Then('alp account of A should be {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

18) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:24[39m
    Step: [1mAnd blp account of A should be 110[22m - [90mfeatures\test.feature:17[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Then('blp account of A should be {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

19) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:24[39m
    Step: [1mAnd alp account of B should be 120[22m - [90mfeatures\test.feature:18[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Then('alp account of B should be {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

20) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:24[39m
    Step: [1mAnd blp account of B should be 90[22m - [90mfeatures\test.feature:19[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Then('blp account of B should be {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

21) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:25[39m
    Step: [1mGiven the exchange rate is 1alp=0.5blp[22m - [90mfeatures\test.feature:10[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Given('the exchange rate is {int}alp={float}blp', function (int, float, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

22) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:25[39m
    Step: [1mAnd original alp account of A is 100[22m - [90mfeatures\test.feature:11[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Given('original alp account of A is {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

23) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:25[39m
    Step: [1mAnd original blp account of A is 100[22m - [90mfeatures\test.feature:12[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Given('original blp account of A is {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

24) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:25[39m
    Step: [1mAnd original alp account of B is 100[22m - [90mfeatures\test.feature:13[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Given('original alp account of B is {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

25) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:25[39m
    Step: [1mAnd original blp account of B is 100[22m - [90mfeatures\test.feature:14[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Given('original blp account of B is {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

26) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:25[39m
    Step: [1mWhen A want to exchange 110 alp for blp[22m - [90mfeatures\test.feature:15[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        When('A want to exchange {int} alp for blp', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

27) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:25[39m
    Step: [1mThen alp account of A should be 100[22m - [90mfeatures\test.feature:16[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Then('alp account of A should be {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

28) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:25[39m
    Step: [1mAnd blp account of A should be 100[22m - [90mfeatures\test.feature:17[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Then('blp account of A should be {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

29) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:25[39m
    Step: [1mAnd alp account of B should be 100[22m - [90mfeatures\test.feature:18[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Then('alp account of B should be {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

30) Scenario: [1mCompany A exchanges alp for blp[22m - [90mfeatures\test.feature:25[39m
    Step: [1mAnd blp account of B should be 100[22m - [90mfeatures\test.feature:19[39m
    Message:
      [33mUndefined. Implement with the following snippet:

        Then('blp account of B should be {int}', function (int, callback) {
          // Write code here that turns the phrase above into concrete actions
          callback(null, 'pending');
        });[39m

3 scenarios ([33m3 undefined[39m)
30 steps ([33m30 undefined[39m)
0m00.000s
